diff --git a/src/app/features/room/message/Message.tsx b/src/app/features/room/message/Message.tsx
index d6709a9..b2249c6 100644
--- a/src/app/features/room/message/Message.tsx
+++ b/src/app/features/room/message/Message.tsx
@@ -702,18 +702,36 @@ export const Message = as<'div', MessageProps>(
     },
     ref
   ) => {
+    const rawEvent = mEvent.getEffectiveEvent();
     const mx = useMatrixClient();
     const useAuthentication = useMediaAuthentication();
-    const senderId = mEvent.getSender() ?? '';
+    let senderId = mEvent.getSender() ?? '';
+    const originalSenderId = senderId;
     const [hover, setHover] = useState(false);
     const { hoverProps } = useHover({ onHoverChange: setHover });
     const { focusWithinProps } = useFocusWithin({ onFocusWithinChange: setHover });
     const [menuAnchor, setMenuAnchor] = useState<RectCords>();
     const [emojiBoardAnchor, setEmojiBoardAnchor] = useState<RectCords>();
 
-    const senderDisplayName =
+    let senderDisplayName =
       getMemberDisplayName(room, senderId) ?? getMxIdLocalPart(senderId) ?? senderId;
-    const senderAvatarMxc = getMemberAvatarMxc(room, senderId);
+    const originalSenderDisplayName = senderDisplayName;
+    let senderAvatarMxc = getMemberAvatarMxc(room, senderId);
+    const pmp = rawEvent.content["com.beeper.per_message_profile"];
+    const fakeOnClick = () => undefined;
+
+    if(pmp) {
+      if(!pmp.id) {
+        pmp.id = `msc4144+${room.name || room.roomId}+${pmp.displayName || senderDisplayName}+${originalSenderId}`;
+      }
+      if(pmp.displayname && typeof pmp.displayname === 'string') {
+        senderDisplayName = pmp.displayname;
+      }
+      if(pmp.avatar_url && typeof pmp.avatar_url === 'string') {
+        senderAvatarMxc = `${pmp.avatar_url}`;
+      }
+      senderId = pmp.id;
+    }
 
     const headerJSX = !collapse && (
       <Box
@@ -724,15 +742,28 @@ export const Message = as<'div', MessageProps>(
         grow="Yes"
       >
         <Username
-          as="button"
+          as={pmp ? "span" : "button"}
           style={{ color: colorMXID(senderId) }}
           data-user-id={senderId}
-          onContextMenu={onUserClick}
-          onClick={onUsernameClick}
+          onContextMenu={pmp ? fakeOnClick : onUserClick}
+          onClick={pmp ? fakeOnClick : onUserClick}
         >
           <Text as="span" size={messageLayout === MessageLayout.Bubble ? 'T300' : 'T400'} truncate>
             <b>{senderDisplayName}</b>
           </Text>
+          {
+            pmp && <Text as="span" size='T200'>
+                  &nbsp;via <Username
+                  as="button"
+                  style={{ color: colorMXID(originalSenderId) }}
+                  data-user-id={originalSenderId}
+                  onContextMenu={onUserClick}
+                  onClick={onUsernameClick}
+              >
+                  <b>{originalSenderDisplayName}</b>
+              </Username>
+              </Text>
+          }
         </Username>
         <Box shrink="No" gap="100">
           {messageLayout === MessageLayout.Modern && hover && (
