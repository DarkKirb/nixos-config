diff --git a/src/hydra-queue-runner/hydra-queue-runner.cc b/src/hydra-queue-runner/hydra-queue-runner.cc
index b7165539..07056102 100644
--- a/src/hydra-queue-runner/hydra-queue-runner.cc
+++ b/src/hydra-queue-runner/hydra-queue-runner.cc
@@ -24,7 +24,6 @@
 #include "lix/libutil/async.hh"
 
 using namespace nix;
-using nlohmann::json;
 
 
 std::string getEnvOrDie(const std::string & key)
@@ -602,7 +601,7 @@ std::optional<PathLock> State::acquireGlobalLock()
 void State::dumpStatus(Connection & conn, AsyncIoRoot & aio)
 {
     time_t now = time(nullptr);
-    json statusJson = {
+    nlohmann::json statusJson = {
         {"status", "up"},
         {"time", time(nullptr)},
         {"uptime", now - startedAt},
@@ -660,7 +659,7 @@ void State::dumpStatus(Connection & conn, AsyncIoRoot & aio)
                 auto & s(m->state);
                 auto info(m->state->connectInfo.lock());
 
-                json machine = {
+                nlohmann::json machine = {
                     {"enabled",  m->enabled},
                     {"systemTypes", m->systemTypesSet},
                     {"supportedFeatures", m->supportedFeatures},
@@ -685,7 +684,7 @@ void State::dumpStatus(Connection & conn, AsyncIoRoot & aio)
         }
 
         {
-            auto jobsets_json = json::object();
+            auto jobsets_json = nlohmann::json::object();
             auto jobsets_(jobsets.lock());
             for (auto & jobset : *jobsets_) {
                 jobsets_json[jobset.first.first + ":" + jobset.first.second] = {
@@ -697,7 +696,7 @@ void State::dumpStatus(Connection & conn, AsyncIoRoot & aio)
         }
 
         {
-            auto machineTypesJson = json::object();
+            auto machineTypesJson = nlohmann::json::object();
             auto machineTypes_(machineTypes.lock());
             for (auto & i : *machineTypes_) {
                 auto machineTypeJson = machineTypesJson[i.first] = {
